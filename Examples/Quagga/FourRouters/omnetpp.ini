#
# This ini file runs Telnet sessions on the NClients network, using
# TelnetApp+TCPGenericSrvApp.
#
# See also fileTransfer.ini and basicHTTP.ini for different kinds of
# network traffic.
#

[General]
preload-ned-files = *.ned @../../../nedfiles.lst
debug-on-errors = false

sim-time-limit = 1500s

network = ZebraTest

[Cmdenv]
express-mode = no

[Tkenv]
plugin-path=../../../Etc/plugins
#default-run=1

[Parameters]

# number of client computers
*.n=4

# udp app (off)
**.numUdpApps=0
**.udpAppType="UDPBasicApp"

# tcp apps
**.cli[*].numTcpApps=0
**.cli[*].tcpAppType="TelnetApp"
**.cli[*].tcpApp[0].address=""
**.cli[*].tcpApp[0].port=-1
**.cli[*].tcpApp[0].connectAddress="srv"
**.cli[*].tcpApp[0].connectPort=1000

**.cli[*].tcpApp[0].startTime=exponential(5)
**.cli[*].tcpApp[0].numCommands=exponential(10)
**.cli[*].tcpApp[0].commandLength=exponential(10)
**.cli[*].tcpApp[0].keyPressDelay=exponential(0.1)
**.cli[*].tcpApp[0].commandOutputLength=exponential(40)
**.cli[*].tcpApp[0].thinkTime=truncnormal(2,3)
**.cli[*].tcpApp[0].idleInterval=truncnormal(3600,1200)
**.cli[*].tcpApp[0].reconnectInterval=30

**.srv.numTcpApps=0
**.srv.tcpAppType="TCPGenericSrvApp"
**.srv.tcpApp[0].address=""
**.srv.tcpApp[0].port=1000
**.srv.tcpApp[0].replyDelay=0

# ping app (off)
**.pingApp.destAddr=""
**.pingApp.srcAddr=""
**.pingApp.packetSize=56
**.pingApp.interval=1
**.pingApp.hopLimit=32
**.pingApp.count=0
**.pingApp.startTime=1
**.pingApp.stopTime=0
**.pingApp.printPing=true

# tcp settings
**.tcp.mss = 1024
**.tcp.advertisedWindow = 14336  # 14*mss
**.tcp.sendQueueClass="TCPMsgBasedSendQueue"
**.tcp.receiveQueueClass="TCPMsgBasedRcvQueue"
**.tcp.tcpAlgorithmClass="TCPReno"
**.tcp.recordStats=true

# ip settings
**.ip.procDelay=10us
**.cli[*].IPForward=false
**.srv*.IPForward=false

# ARP configuration
**.arp.retryTimeout = 1
**.arp.retryCount = 3
**.arp.cacheTimeout = 100
**.networkLayer.proxyARP = true  # Host's is hardwired "false"

# NIC configuration
**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 10  # in routers

**.eth[*].queueType = "DropTailQueue" # in routers
**.eth[*].queue.frameCapacity = 10  # in routers
**.eth[*].mac.promiscuous = 0
**.eth[*].mac.txrate = 10000000
**.eth[*].mac.duplexEnabled = 1

**.r2.eth[0].mac.address = "01:02:03:04:05:06"

**.s1.eth[0].mac.address = "01:01:01:01:01:01"
**.s2.eth[0].mac.address = "02:02:02:02:02:02"

**.r1.*.fsroot = "r1"
**.r2.*.fsroot = "r2"
**.r3.*.fsroot = "r3"
**.r4.*.fsroot = "r4"

**.cli[0].routingFile = "cli0.rt"
**.cli[1].routingFile = "cli1.rt"
**.cli[2].routingFile = "cli2.rt"
**.cli[3].routingFile = "cli3.rt"

**.srv.routingFile = "srv.rt"

**.r1.routingFile = "r1.rt"
**.r2.routingFile = "r2.rt"
**.r3.routingFile = "r3.rt"
**.r4.routingFile = "r4.rt"

**.scenarioManager.script = xmldoc("scenario.xml")

**.s1.routingFile = "s1.rt"
**.s2.routingFile = "s2.rt"

**.writeScalars = 0
**.namid = 0
**.numUdpApps=0
**.numTcpApps=0
**.udpAppType="UDPBasicApp"
**.tcpAppType="TelnetApp"
**.IPForward = 1

# nam trace
**.nam.logfile = "trace.nam"
**.nam.prolog = ""
**.namid = -1  # auto

[Run 1]
description = "Quagga ospfd routing"
*.r*.routingDaemon = "Ospfd"

[Run 2]
description = "Quagga ripd routing"
*.r*.routingDaemon = "Ripd"

[Run 3]
description = "Quagga bgpd routing"
*.r*.routingDaemon = "Bgpd"
