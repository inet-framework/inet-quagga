#
# This ini file runs Telnet sessions on the NClients network, using
# TelnetApp+TCPGenericSrvApp.
#
# See also fileTransfer.ini and basicHTTP.ini for different kinds of
# network traffic.
#

[General]
preload-ned-files = *.ned @../../../nedfiles.lst
;debug-on-errors = true
perform-gc = false

network = REDTest
#network = REDTestTh
#network = REDTestDebug

cmdenv-express-mode = false

tkenv-plugin-path = ../../../Etc/plugins
;tkenv-default-run=1

# udp app (off)
**.numUdpApps = 0
**.udpAppType = "UDPBasicApp"

# tcp apps
**.s1.numTcpApps = 1
**.s1.tcpAppType = "TCPSessionApp"  # ftp
**.s1.tcpApp[0].active = true
**.s1.tcpApp[0].connectAddress = "s3"
**.s1.tcpApp[0].connectPort = 1000
**.s1.tcpApp[0].tOpen = 0s
**.s1.tcpApp[0].tSend = 0s
**.s1.tcpApp[0].sendBytes = 100000000  # 100Mb
**.s1.tcpApp[0].tClose = 0s

**.s2.numTcpApps = 0
**.s2.tcpAppType = "TCPSessionApp"  # ftp
**.s2.tcpApp[0].active = true
**.s2.tcpApp[0].connectAddress = "s3"
**.s2.tcpApp[0].connectPort = 1000
**.s2.tcpApp[0].tOpen = 3s
**.s2.tcpApp[0].tSend = 0s
**.s2.tcpApp[0].sendBytes = 100000000  # 100Mb
**.s2.tcpApp[0].tClose = 0s

**.s3.numTcpApps = 1
**.s3.tcpAppType = "TCPSinkApp"
**.s3.tcpApp[0].address = ""
**.s3.tcpApp[0].port = 1000

**.s4.numTcpApps = 0
**.s4.tcpAppType = "TCPSessionApp"

**.tcpApp[*].address = ""
**.tcpApp[*].port = -1
**.tcpApp[*].sendScript = ""

# ping app
#**.s1.pingApp.destAddr="s3"
**.pingApp.destAddr = ""
**.pingApp.srcAddr = ""
**.pingApp.packetSize = 56
**.pingApp.interval = 5
**.pingApp.hopLimit = 32
**.pingApp.count = 0
**.pingApp.startTime = 5
**.pingApp.stopTime = 0
**.pingApp.printPing = true

# tcp settings
**.tcp.mss = 1024
**.tcp.advertisedWindow = 65536  # 64*mss
**.tcp.tcpAlgorithmClass = "TCPReno"
#**.tcp.tcpAlgorithmClass="TCPTahoe"
#**.tcp.tcpAlgorithmClass="TCPNoCongestionControl"
#**.tcp.tcpAlgorithmClass="DumbTCP"
#**.tcp.sendQueueClass="TCPMsgBasedSendQueue"
#**.tcp.receiveQueueClass="TCPMsgBasedRcvQueue"
**.tcp.sendQueueClass = "TCPVirtualDataSendQueue"
**.tcp.receiveQueueClass = "TCPVirtualDataRcvQueue"
**.tcp.recordStats = true

# ip settings
**.routingFile = ""
**.ip.procDelay = 0
**.IPForward = false

# ARP configuration
**.arp.retryTimeout = 1
**.arp.retryCount = 3
**.arp.cacheTimeout = 100
**.networkLayer.proxyARP = true  # Host's is hardwired "false"

# thruput measurement
**.th.startTime = 0
**.th.batchSize = 50
**.th.maxInterval = 3s

# scenario
**.scenarioManager.script = xmldoc("empty.xml")
;**.scenarioManager.script = xmldoc("scenario.xml")

# nam trace
**.nam.logfile = "trace.nam"
**.nam.prolog = ""
**.namid = -1  # auto

# output vectors
*.r1.ppp[0].queue.*.enable-recording = true
**.queue.*.enable-recording = false

[Config DropTailQueue]
description = "drop-tail queue (50 pk)"

# NIC configuration
**.ppp[*].queueType = "DropTailQueue"
**.ppp[*].queue.frameCapacity = 50

[Config REDQueue1]
description = "RED queue (5..15 pk)"

# NIC configuration
**.ppp[*].queueType = "REDQueue"
**.ppp[*].queue.wq = 0.002
**.ppp[*].queue.minth = 5  # packets
**.ppp[*].queue.maxth = 15  # packets
**.ppp[*].queue.maxp = 0.02  # 1/50
**.ppp[*].queue.pkrate = 150  # ~1K packets on 1.5Mbps link

[Config REDQueue2]
description = "RED queue (5..50 pk)"

# NIC configuration
**.ppp[*].queueType = "REDQueue"
**.ppp[*].queue.wq = 0.002
**.ppp[*].queue.minth = 5  # packets
**.ppp[*].queue.maxth = 50  # packets
**.ppp[*].queue.maxp = 0.02  # 1/50
**.ppp[*].queue.pkrate = 150  # ~1K packets on 1.5Mbps link
