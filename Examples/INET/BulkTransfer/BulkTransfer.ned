//
// Copyright (C) 2000 Institut fuer Telematik, Universitaet Karlsruhe
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
//


import "Router";
import "StandardHost";
import "FlatNetworkConfigurator";


network BulkTransfer
{
    submodules:
        client1: StandardHost {
            parameters:
                @display("p=131,67;i=device/pc3");
        };
        client2: StandardHost {
            parameters:
                @display("p=337,67;i=device/pc3");
        };
        client3: StandardHost {
            parameters:
                @display("p=337,247;i=device/pc3");
        };
        server: StandardHost {
            parameters:
                @display("p=131,247;i=device/pc2");
        };
        router: Router {
            parameters:
                @display("p=239,156");
        };
        configurator: FlatNetworkConfigurator {
            parameters:
                moduleTypes = "Router StandardHost";
                nonIPModuleTypes = "";
                networkAddress = "145.236.0.0";
                netmask = "255.255.0.0";
                @display("p=62,119");
        };
    connections:
        client1.pppg$o++ --> {  datarate = 1000000; } --> router.pppg$i++;
        client1.pppg$i++ <-- {  datarate = 1000000; } <-- router.pppg$o++;

        client2.pppg$o++ --> {  datarate = 1000000; } --> router.pppg$i++;
        client2.pppg$i++ <-- {  datarate = 1000000; } <-- router.pppg$o++;

        client3.pppg$o++ --> {  datarate = 1000000; } --> router.pppg$i++;
        client3.pppg$i++ <-- {  datarate = 1000000; } <-- router.pppg$o++;

        server.pppg$o++ --> {  datarate = 1000000; } --> router.pppg$i++;
        server.pppg$i++ <-- {  datarate = 1000000; } <-- router.pppg$o++;

        client1.pppg$o++ --> {  datarate = 1000000; } --> server.pppg$i++;
        client1.pppg$i++ <-- {  datarate = 1000000; } <-- server.pppg$o++;
}

