#
# This ini file runs a a different application on the same network, NClients.
# It models video streaming, using UDPVideoStreamCli/Svr.
#
# To try, type NClients -f video.ini
#

[General]
preload-ned-files = *.ned @../../../nedfiles.lst

network = NClients

[Cmdenv]
express-mode = no

[Tkenv]
plugin-path=../../../Etc/plugins
default-run=1

[Parameters]

# number of client computers
*.n=5

# udp app
**.numUdpApps=1
**.cli[*].udpAppType="UDPVideoStreamCli"
**.cli[*].udpApp[*].serverAddress = "srv"
**.cli[*].udpApp[*].localPort = 9999
**.cli[*].udpApp[*].serverPort = 3088
**.cli[*].udpApp[*].startTime = uniform(5, 5.01)

**.srv.udpAppType = "UDPVideoStreamSvr"
**.srv.udpApp[*].videoSize = 1e7
**.srv.udpApp[*].serverPort = 3088
**.srv.udpApp[*].waitInterval = .01
**.srv.udpApp[*].packetLen = 1000

# tcp app (off)
**.numTcpApps=0
**.tcpAppType="TCPSessionApp"

# ping app (off)
**.pingApp.destAddr=""
**.pingApp.srcAddr=""
**.pingApp.packetSize=56
**.pingApp.interval=1
**.pingApp.hopLimit=32
**.pingApp.count=0
**.pingApp.startTime=1
**.pingApp.stopTime=0
**.pingApp.printPing=true

# tcp settings
**.tcp.mss = 1024
**.tcp.advertisedWindow = 14336  # 14*mss
**.tcp.sendQueueClass="TCPVirtualDataSendQueue"
**.tcp.receiveQueueClass="TCPVirtualDataRcvQueue"
**.tcp.tcpAlgorithmClass="TCPReno"
**.tcp.recordStats=true

# ip settings
**.routingFile=""
**.ip.procDelay=10us
**.cli[*].IPForward=false
**.srv*.IPForward=false

# ARP configuration
**.arp.retryTimeout = 1
**.arp.retryCount = 3
**.arp.cacheTimeout = 100
**.networkLayer.proxyARP = true  # Host's is hardwired "false"

# NIC configuration
**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 10  # in routers

# hook names
**.qosBehaviorClass = "EnqueueWithoutQoS"

# nam trace
**.nam.logfile = "trace.nam"
**.nam.prolog = ""
**.namid = -1  # auto
