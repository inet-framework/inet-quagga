
[General]
preload-ned-files = @../../../nedfiles.lst
;debug-on-errors = true

sim-time-limit = 10s

network = Test

[Cmdenv]
express-mode = no
runs-to-execute=1-8

[Tkenv]
plugin-path=../../../Etc/plugins
#default-run=1

[Parameters]

# udp app (off)
**.numUdpApps=0
**.udpAppType="UDPBasicApp"

# tcp apps (off)
**.numTcpApps=0
**.tcpAppType="TCPGenericSrvApp"
**.tcpApp[0].address=""
**.tcpApp[0].port=1000
**.tcpApp[0].replyDelay=0

# ping app (off)
**.pingApp.destAddr=""
**.pingApp.srcAddr=""
**.pingApp.packetSize=56
**.pingApp.interval=1
**.pingApp.hopLimit=32
**.pingApp.count=0
**.pingApp.startTime=1
**.pingApp.stopTime=0
**.pingApp.printPing=true

# tcp settings
**.tcp.mss = 1024
**.tcp.advertisedWindow = 14336  # 14*mss
**.tcp.sendQueueClass="TCPMsgBasedSendQueue"
**.tcp.receiveQueueClass="TCPMsgBasedRcvQueue"
**.tcp.tcpAlgorithmClass="TCPReno"
**.tcp.recordStats=true

# ip settings
**.ip.procDelay=10us
**.IPForward=true

# ARP configuration
**.arp.retryTimeout = 1
**.arp.retryCount = 3
**.arp.cacheTimeout = 100
**.networkLayer.proxyARP = true  # Host's is hardwired "false"

# NIC configuration
**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 10  # in routers

**.eth[*].queueType = "DropTailQueue" # in routers
**.eth[*].queue.frameCapacity = 10  # in routers
**.eth[*].mac.promiscuous = 0
**.eth[*].mac.txrate = 10000000
**.eth[*].mac.duplexEnabled = 1

**.fsroot = "."

**.r1.routingFile = "r1.irt"
**.r1.routerId = "10.0.1.1"
**.r2.routingFile = "r2.irt"
**.r2.routerId = "10.0.2.1"
**.r3.routingFile = "r3.irt"
**.r3.routerId = "10.0.3.1"
**.r4.routingFile = "r4.irt"
**.r4.routerId = "10.0.4.1"
**.r5.routingFile = "r5.irt"
**.r5.routerId = "10.0.5.1"

**.r*.testUnit = "Nothing"
**.r*.unit.config = xmldoc("_defaults.xml")
**.r*.unit.output = xmldoc("_nooutput.xml");

**.writeScalars = 0

[Run 1]
description = "TestSocket (TCP, blocking)"
*.r1.testUnit = "TestSocket_writer"
*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_b_tcp']")
*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_tcp']")
*.r4.testUnit = "TestSocket_reader"
*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_b_tcp']")
*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_tcp']")

[Run 2]
description = "TestSocket (TCP, nonblocking)"
*.r1.testUnit = "TestSocket_writer"
*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_nb_tcp']")
*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_tcp']")
*.r4.testUnit = "TestSocket_reader"
*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_nb_tcp']")
*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_tcp']")

[Run 3]
description = "TestSocket (TCP, blocking-nonblocking)"
*.r1.testUnit = "TestSocket_writer"
*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_b_tcp']")
*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_tcp']")
*.r4.testUnit = "TestSocket_reader"
*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_nb_tcp']")
*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_tcp']")

[Run 4]
description = "TestSocket (TCP, nonblocking-blocking)"
*.r1.testUnit = "TestSocket_writer"
*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_nb_tcp']")
*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_tcp']")
*.r4.testUnit = "TestSocket_reader"
*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_b_tcp']")
*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_tcp']")

[Run 5]
description = "TestSocket (UDP, blocking)"
*.r1.testUnit = "TestSocket_writer"
*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_b_udp']")
*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_udp']")
*.r4.testUnit = "TestSocket_reader"
*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_b_udp']")
*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_udp']")

[Run 6]
description = "TestSocket (UDP, nonblocking)"
*.r1.testUnit = "TestSocket_writer"
*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_nb_udp']")
*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_udp']")
*.r4.testUnit = "TestSocket_reader"
*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_nb_udp']")
*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_udp']")

[Run 7]
description = "TestSocket (UDP, blocking-nonblocking)"
*.r1.testUnit = "TestSocket_writer"
*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_b_udp']")
*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_udp']")
*.r4.testUnit = "TestSocket_reader"
*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_nb_udp']")
*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_udp']")

[Run 8]
description = "TestSocket (UDP, nonblocking-blocking)"
*.r1.testUnit = "TestSocket_writer"
*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_nb_udp']")
*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_udp']")
*.r4.testUnit = "TestSocket_reader"
*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_b_udp']")
*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_udp']")
