diff --git a/QuaggaRouter.ned b/QuaggaRouter.ned
deleted file mode 100644
index 131fecb..0000000
--- a/QuaggaRouter.ned
+++ /dev/null
@@ -1,131 +0,0 @@
-//
-// Copyright (C) 2005 Vojta Janota
-//
-// This program is free software; you can redistribute it and/or
-// modify it under the terms of the GNU General Public License
-// as published by the Free Software Foundation; either version 2
-// of the License, or (at your option) any later version.
-//
-// This program is distributed in the hope that it will be useful,
-// but WITHOUT ANY WARRANTY; without even the implied warranty of
-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-// GNU General Public License for more details.
-//
-// You should have received a copy of the GNU General Public License
-// along with this program; if not, write to the Free Software
-// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-//
-
-
-
-
-package inet.nodes.inet;
-
-import inet.base.NotificationBoard;
-import inet.networkinterfaces.ethernet.EthernetInterface;
-import inet.networkinterfaces.ppp.PPPInterface;
-import inet.networklayer.contract.InterfaceTable;
-import inet.networklayer.ipv4.RoutingTable;
-import inet.transport.tcp.TCP;
-import inet.transport.udp.UDP;
-import inet.util.NAMTraceWriter;
-
-
-//
-// Quagga-based \IP router.
-//
-module QuaggaRouter
-{
-    parameters:
-        int namid;
-        string routingFile = default("");
-        string routingDaemon; // "Ripd", "Ospfd", etc.
-        @display("i=srouter");
-    gates:
-        inout pppg[];
-        inout ethg[];
-    submodules:
-        namTrace: NAMTraceWriter {
-            parameters:
-                namid = namid;
-                @display("p=330,60");
-        }
-        notificationBoard: NotificationBoard {
-            parameters:
-                @display("p=60,60");
-        }
-        interfaceTable: InterfaceTable {
-            parameters:
-                @display("p=150,60");
-        }
-        routingTable: RoutingTable {
-            parameters:
-                IPForward = true;
-                routerId = "auto";
-                routingFile = routingFile;
-                @display("p=240,60");
-        }
-        networkLayer: NetworkLayer {
-            parameters:
-                @display("p=200,341;q=queue");
-            gates:
-                ifIn[sizeof(pppg)+sizeof(ethg)];
-                ifOut[sizeof(pppg)+sizeof(ethg)];
-        }
-        ppp[sizeof(pppg)]: PPPInterface {
-            parameters:
-                @display("p=90,457,row,110;q=l2queue");
-        }
-        eth[sizeof(ethg)]: EthernetInterface {
-            parameters:
-                @display("p=145,457,row,110;q=l2queue");
-        }
-        tcp: TCP {
-            parameters:
-                @display("p=200,250");
-        }
-        udp: UDP {
-            parameters:
-                @display("p=300,250");
-        }
-        zebra: Zebra {
-            parameters:
-                @display("p=150, 150");
-        }
-        router: <routingDaemon> like Zebra {
-            parameters:
-                @display("p=250, 150");
-        }
-    connections allowunconnected:
-        // connections to network outside
-        for i=0..sizeof(pppg)-1 {
-            pppg[i] <--> ppp[i].phys;
-            ppp[i].netwOut --> networkLayer.ifIn[i];
-            ppp[i].netwIn <-- networkLayer.ifOut[i];
-        }
-
-        tcp.to_ip --> networkLayer.TCPIn;
-        tcp.from_ip <-- networkLayer.TCPOut;
-
-        udp.to_ip --> networkLayer.UDPIn;
-        udp.from_ip <-- networkLayer.UDPOut;
-
-        zebra.tcpIn <-- tcp.to_appl++;
-        zebra.tcpOut --> tcp.from_appl++;
-
-        router.tcpIn <-- tcp.to_appl++;
-        router.tcpOut --> tcp.from_appl++;
-
-        router.udpIn <-- udp.to_app++;
-        router.udpOut --> udp.from_app++;
-
-        router.ipOut --> networkLayer.OSPFIn;
-        router.ipIn <-- networkLayer.OSPFOut;
-
-        for i=0..sizeof(ethg)-1 {
-            ethg[i] <--> eth[i].phys;
-            eth[i].netwOut --> networkLayer.ifIn[sizeof(pppg)+i];
-            eth[i].netwIn <-- networkLayer.ifOut[sizeof(pppg)+i];
-        }
-}
-
diff --git a/examples/fourRouters/ZebraTest.ned b/examples/fourRouters/ZebraTest.ned
index 0da0c28..c81d598 100644
--- a/examples/fourRouters/ZebraTest.ned
+++ b/examples/fourRouters/ZebraTest.ned
@@ -21,16 +21,16 @@
 
 
 
-package org.omnetpp.inet.examples.Quagga.FourRouters;
+package fourRouters;
 
+import inet.examples.ethernet.lans.ethernetline;
+import inet.networklayer.extras.FailureManager;
+import inet.nodes.inet.StandardHost;
+import inet.world.ChannelInstaller;
+import inet.world.NAMTrace;
+import inet.world.ScenarioManager;
 import ned.DatarateChannel;
-import org.omnetpp.inet.Network.Extras.FailureManager;
-import org.omnetpp.inet.Nodes.INET.QuaggaRouter;
-import org.omnetpp.inet.Nodes.INET.StandardHost;
-import org.omnetpp.inet.World.ChannelInstaller;
-import org.omnetpp.inet.World.NAMTrace;
-import org.omnetpp.inet.World.ScenarioManager;
-import org.omnetpp.inet.examples.Ethernet.LANs.ethernetline;
+import org.omnetpp.inet.networklayer.quagga.QuaggaRouter;
 
 
 network ZebraTest
diff --git a/examples/ospfBackbone/Backbone.ned b/examples/ospfBackbone/Backbone.ned
index e0d14e5..b853da6 100644
--- a/examples/ospfBackbone/Backbone.ned
+++ b/examples/ospfBackbone/Backbone.ned
@@ -1,11 +1,11 @@
 
-package org.omnetpp.inet.examples.Quagga.OSPFBackbone;
+package ospfBackbone;
 
+import inet.linklayer.ethernet.EtherHub;
+import inet.nodes.inet.StandardHost;
+import inet.world.ChannelInstaller;
 import ned.DatarateChannel;
-import org.omnetpp.inet.NetworkInterfaces.Ethernet.EtherHub;
-import org.omnetpp.inet.Nodes.INET.QuaggaRouter;
-import org.omnetpp.inet.Nodes.INET.StandardHost;
-import org.omnetpp.inet.World.ChannelInstaller;
+import org.omnetpp.inet.networklayer.quagga.QuaggaRouter;
 
 
 network QuaggaOSPFBackbone
diff --git a/examples/simpleTest/SimpleTest.ned b/examples/simpleTest/SimpleTest.ned
index ecf6355..00ff03a 100644
--- a/examples/simpleTest/SimpleTest.ned
+++ b/examples/simpleTest/SimpleTest.ned
@@ -1,11 +1,11 @@
 
-package org.omnetpp.inet.examples.Quagga.SimpleTest;
+package simpleTest;
 
+import inet.linklayer.ethernet.EtherHub;
+import inet.nodes.inet.StandardHost;
+import inet.world.ChannelInstaller;
 import ned.DatarateChannel;
-import org.omnetpp.inet.NetworkInterfaces.Ethernet.EtherHub;
-import org.omnetpp.inet.Nodes.INET.QuaggaRouter;
-import org.omnetpp.inet.Nodes.INET.StandardHost;
-import org.omnetpp.inet.World.ChannelInstaller;
+import org.omnetpp.inet.networklayer.quagga.QuaggaRouter;
 
 
 network SimpleTest
@@ -61,12 +61,12 @@ network SimpleTest
                 ethg[1];
         }
     connections:
-        H1.ethg[0] <--> C <--> N1.pppg[0];
-        N1.pppg[1] <--> C <--> R1.ethg[0];
+        H1.ethg[0] <--> C <--> N1.ethg[0];
+        N1.ethg[1] <--> C <--> R1.ethg[0];
 
         R1.pppg++ <--> {  datarate = 10Mbps; delay = 0.1us; } <--> R2.pppg++;
 
-        R2.ethg[0] <--> C <--> N2.pppg[0];
-        N2.pppg[1] <--> C <--> H2.ethg[0];
+        R2.ethg[0] <--> C <--> N2.ethg[0];
+        N2.ethg[1] <--> C <--> H2.ethg[0];
 }
 
diff --git a/src/Bgpd.ned b/src/Bgpd.ned
index 94119a9..7b968cd 100644
--- a/src/Bgpd.ned
+++ b/src/Bgpd.ned
@@ -10,7 +10,7 @@
 // See the GNU Lesser General Public License for more details.
 //
 
-package org.omnetpp.inet.Network.Quagga;
+package org.omnetpp.inet.networklayer.quagga;
 
 simple Bgpd
 {
diff --git a/src/Ospfd.ned b/src/Ospfd.ned
index 2056534..82b7657 100644
--- a/src/Ospfd.ned
+++ b/src/Ospfd.ned
@@ -10,7 +10,7 @@
 // See the GNU Lesser General Public License for more details.
 //
 
-package org.omnetpp.inet.Network.Quagga;
+package org.omnetpp.inet.networklayer.quagga;
 
 simple Ospfd
 {
diff --git a/src/Ripd.ned b/src/Ripd.ned
index c832d65..9cb1a45 100644
--- a/src/Ripd.ned
+++ b/src/Ripd.ned
@@ -10,7 +10,7 @@
 // See the GNU Lesser General Public License for more details.
 //
 
-package org.omnetpp.inet.Network.Quagga;
+package org.omnetpp.inet.networklayer.quagga;
 
 simple Ripd
 {
diff --git a/src/Zebra.ned b/src/Zebra.ned
index b1dcc9c..4f23441 100644
--- a/src/Zebra.ned
+++ b/src/Zebra.ned
@@ -10,7 +10,7 @@
 // See the GNU Lesser General Public License for more details.
 //
 
-package org.omnetpp.inet.Network.Quagga;
+package org.omnetpp.inet.networklayer.quagga;
 
 simple Zebra
 {
diff --git a/src/unitTest/Test.ned b/src/unitTest/Test.ned
index 3afc9a4..81d39e9 100644
--- a/src/unitTest/Test.ned
+++ b/src/unitTest/Test.ned
@@ -1,9 +1,8 @@
 
-package org.omnetpp.inet.Network.Quagga.UnitTest;
+package org.omnetpp.inet.networklayer.quagga.unitTest;
 
+import inet.world.ChannelInstaller;
 import ned.DatarateChannel;
-import org.omnetpp.inet.World.ChannelInstaller;
-
 
 
 network Test
diff --git a/src/unitTest/TestRouter.ned b/src/unitTest/TestRouter.ned
index b8e2b06..c34cd54 100644
--- a/src/unitTest/TestRouter.ned
+++ b/src/unitTest/TestRouter.ned
@@ -1,16 +1,17 @@
 
-package org.omnetpp.inet.Network.Quagga.UnitTest;
+package org.omnetpp.inet.networklayer.quagga.unitTest;
 
-import org.omnetpp.inet.Base.NotificationBoard;
-import org.omnetpp.inet.Network.Contract.InterfaceTable;
-import org.omnetpp.inet.Network.IPv4.RoutingTable;
-import org.omnetpp.inet.NetworkInterfaces.PPP.PPPInterface;
-import org.omnetpp.inet.Nodes.INET.NetworkLayer;
-import org.omnetpp.inet.Transport.TCP.TCP;
-import org.omnetpp.inet.Transport.UDP.UDP;
+import inet.base.NotificationBoard;
+import inet.linklayer.ppp.PPPInterface;
+import inet.networklayer.common.InterfaceTable;
+import inet.networklayer.ipv4.RoutingTable;
+import inet.nodes.inet.NetworkLayer;
+import inet.transport.tcp.TCP;
+import inet.transport.udp.UDP;
 
 
-moduleinterface TestNop {
+moduleinterface TestNop
+{
     gates:
         input tcpIn;
         output tcpOut;
@@ -75,19 +76,19 @@ module TestRouter
             ppp[i].netwIn <-- networkLayer.ifOut[i];
         }
 
-        tcp.to_ip --> networkLayer.TCPIn;
-        tcp.from_ip <-- networkLayer.TCPOut;
+        tcp.ipOut --> networkLayer.tcpIn;
+        tcp.ipIn <-- networkLayer.TCPOut;
 
-        udp.to_ip --> networkLayer.UDPIn;
-        udp.from_ip <-- networkLayer.UDPOut;
+        udp.ipOut --> networkLayer.udpIn;
+        udp.ipIn <-- networkLayer.udpOut;
 
-        unit.tcpIn <-- tcp.to_appl++;
-        unit.tcpOut --> tcp.from_appl++;
+        unit.tcpIn <-- tcp.appOut++;
+        unit.tcpOut --> tcp.appIn++;
 
-        unit.udpIn <-- udp.to_app++;
-        unit.udpOut --> udp.from_app++;
+        unit.udpIn <-- udp.appOut++;
+        unit.udpOut --> udp.appIn++;
 
-        unit.ipOut --> networkLayer.OSPFIn;
-        unit.ipIn <-- networkLayer.OSPFOut;
+        unit.ipOut --> networkLayer.ospfIn;
+        unit.ipIn <-- networkLayer.ospfOut;
 }
 
diff --git a/src/unitTest/UnitTest.ned b/src/unitTest/UnitTest.ned
index e5d431e..0c2b4c1 100644
--- a/src/unitTest/UnitTest.ned
+++ b/src/unitTest/UnitTest.ned
@@ -10,7 +10,7 @@
 // See the GNU Lesser General Public License for more details.
 //
 
-package org.omnetpp.inet.Network.Quagga.UnitTest;
+package org.omnetpp.inet.networklayer.quagga.unitTest;
 
 simple UnitTest
 {
diff --git a/src/unitTest/omnetpp.ini b/src/unitTest/omnetpp.ini
index 68ece16..0bae714 100644
--- a/src/unitTest/omnetpp.ini
+++ b/src/unitTest/omnetpp.ini
@@ -1,157 +1,157 @@
-[General]
-preload-ned-files = @../../../nedfiles.lst
-;debug-on-errors = true
-
-sim-time-limit = 10s
-
-network = Test
-
-[Cmdenv]
-express-mode = no
-runs-to-execute=1-8
-
-[Tkenv]
-plugin-path=../../../Etc/plugins
-#default-run=1
-
-[Parameters]
-# udp app (off)
-**.numUdpApps=0
-**.udpAppType="UDPBasicApp"
-
-# tcp apps (off)
-**.numTcpApps=0
-**.tcpAppType="TCPGenericSrvApp"
-**.tcpApp[0].address=""
-**.tcpApp[0].port=1000
-**.tcpApp[0].replyDelay=0
-
-# ping app (off)
-**.pingApp.destAddr=""
-**.pingApp.srcAddr=""
-**.pingApp.packetSize=56
-**.pingApp.interval=1
-**.pingApp.hopLimit=32
-**.pingApp.count=0
-**.pingApp.startTime=1
-**.pingApp.stopTime=0
-**.pingApp.printPing=true
-
-# tcp settings
-**.tcp.mss = 1024
-**.tcp.advertisedWindow = 14336  # 14*mss
-**.tcp.sendQueueClass="TCPMsgBasedSendQueue"
-**.tcp.receiveQueueClass="TCPMsgBasedRcvQueue"
-**.tcp.tcpAlgorithmClass="TCPReno"
-**.tcp.recordStats=true
-
-# ip settings
-**.ip.procDelay=10us
-**.IPForward=true
-
-# ARP configuration
-**.arp.retryTimeout = 1
-**.arp.retryCount = 3
-**.arp.cacheTimeout = 100
-**.networkLayer.proxyARP = true  # Host's is hardwired "false"
-
-# NIC configuration
-**.ppp[*].queueType = "DropTailQueue" # in routers
-**.ppp[*].queue.frameCapacity = 10  # in routers
-
-**.eth[*].queueType = "DropTailQueue" # in routers
-**.eth[*].queue.frameCapacity = 10  # in routers
-**.eth[*].mac.promiscuous = 0
-**.eth[*].mac.txrate = 10000000
-**.eth[*].mac.duplexEnabled = 1
-
-**.fsroot = "."
-
-**.r1.routingFile = "r1.irt"
-**.r1.routerId = "10.0.1.1"
-**.r2.routingFile = "r2.irt"
-**.r2.routerId = "10.0.2.1"
-**.r3.routingFile = "r3.irt"
-**.r3.routerId = "10.0.3.1"
-**.r4.routingFile = "r4.irt"
-**.r4.routerId = "10.0.4.1"
-**.r5.routingFile = "r5.irt"
-**.r5.routerId = "10.0.5.1"
-
-**.r*.testUnit = "Nothing"
-**.r*.unit.config = xmldoc("_defaults.xml")
-**.r*.unit.output = xmldoc("_nooutput.xml");
-
-**.writeScalars = 0
-
-[Run 1]
-description = "TestSocket (TCP, blocking)"
-*.r1.testUnit = "TestSocket_writer"
-*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_b_tcp']")
-*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_tcp']")
-*.r4.testUnit = "TestSocket_reader"
-*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_b_tcp']")
-*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_tcp']")
-
-[Run 2]
-description = "TestSocket (TCP, nonblocking)"
-*.r1.testUnit = "TestSocket_writer"
-*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_nb_tcp']")
-*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_tcp']")
-*.r4.testUnit = "TestSocket_reader"
-*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_nb_tcp']")
-*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_tcp']")
-
-[Run 3]
-description = "TestSocket (TCP, blocking-nonblocking)"
-*.r1.testUnit = "TestSocket_writer"
-*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_b_tcp']")
-*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_tcp']")
-*.r4.testUnit = "TestSocket_reader"
-*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_nb_tcp']")
-*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_tcp']")
-
-[Run 4]
-description = "TestSocket (TCP, nonblocking-blocking)"
-*.r1.testUnit = "TestSocket_writer"
-*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_nb_tcp']")
-*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_tcp']")
-*.r4.testUnit = "TestSocket_reader"
-*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_b_tcp']")
-*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_tcp']")
-
-[Run 5]
-description = "TestSocket (UDP, blocking)"
-*.r1.testUnit = "TestSocket_writer"
-*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_b_udp']")
-*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_udp']")
-*.r4.testUnit = "TestSocket_reader"
-*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_b_udp']")
-*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_udp']")
-
-[Run 6]
-description = "TestSocket (UDP, nonblocking)"
-*.r1.testUnit = "TestSocket_writer"
-*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_nb_udp']")
-*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_udp']")
-*.r4.testUnit = "TestSocket_reader"
-*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_nb_udp']")
-*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_udp']")
-
-[Run 7]
-description = "TestSocket (UDP, blocking-nonblocking)"
-*.r1.testUnit = "TestSocket_writer"
-*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_b_udp']")
-*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_udp']")
-*.r4.testUnit = "TestSocket_reader"
-*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_nb_udp']")
-*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_udp']")
-
-[Run 8]
-description = "TestSocket (UDP, nonblocking-blocking)"
-*.r1.testUnit = "TestSocket_writer"
-*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_nb_udp']")
-*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_udp']")
-*.r4.testUnit = "TestSocket_reader"
-*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_b_udp']")
-*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_udp']")
+[General]
+preload-ned-files = @../../../nedfiles.lst
+;debug-on-errors = true
+
+sim-time-limit = 10s
+
+network = Test
+
+[Cmdenv]
+express-mode = no
+runs-to-execute=1-8
+
+[Tkenv]
+plugin-path=../../../Etc/plugins
+#default-run=1
+
+[Parameters]
+# udp app (off)
+**.numUdpApps=0
+**.udpAppType="UDPBasicApp"
+
+# tcp apps (off)
+**.numTcpApps=0
+**.tcpAppType="TCPGenericSrvApp"
+**.tcpApp[0].address=""
+**.tcpApp[0].port=1000
+**.tcpApp[0].replyDelay=0
+
+# ping app (off)
+**.pingApp.destAddr=""
+**.pingApp.srcAddr=""
+**.pingApp.packetSize=56
+**.pingApp.interval=1
+**.pingApp.hopLimit=32
+**.pingApp.count=0
+**.pingApp.startTime=1
+**.pingApp.stopTime=0
+**.pingApp.printPing=true
+
+# tcp settings
+**.tcp.mss = 1024
+**.tcp.advertisedWindow = 14336  # 14*mss
+**.tcp.sendQueueClass="TCPMsgBasedSendQueue"
+**.tcp.receiveQueueClass="TCPMsgBasedRcvQueue"
+**.tcp.tcpAlgorithmClass="TCPReno"
+**.tcp.recordStats=true
+
+# ip settings
+**.ip.procDelay=10us
+**.IPForward=true
+
+# ARP configuration
+**.arp.retryTimeout = 1
+**.arp.retryCount = 3
+**.arp.cacheTimeout = 100
+**.networkLayer.proxyARP = true  # Host's is hardwired "false"
+
+# NIC configuration
+**.ppp[*].queueType = "DropTailQueue" # in routers
+**.ppp[*].queue.frameCapacity = 10  # in routers
+
+**.eth[*].queueType = "DropTailQueue" # in routers
+**.eth[*].queue.frameCapacity = 10  # in routers
+**.eth[*].mac.promiscuous = 0
+**.eth[*].mac.txrate = 10000000
+**.eth[*].mac.duplexEnabled = 1
+
+**.fsroot = "."
+
+**.r1.routingFile = "r1.irt"
+**.r1.routerId = "10.0.1.1"
+**.r2.routingFile = "r2.irt"
+**.r2.routerId = "10.0.2.1"
+**.r3.routingFile = "r3.irt"
+**.r3.routerId = "10.0.3.1"
+**.r4.routingFile = "r4.irt"
+**.r4.routerId = "10.0.4.1"
+**.r5.routingFile = "r5.irt"
+**.r5.routerId = "10.0.5.1"
+
+**.r*.testUnit = "Nothing"
+**.r*.unit.config = xmldoc("_defaults.xml")
+**.r*.unit.output = xmldoc("_nooutput.xml");
+
+**.writeScalars = 0
+
+[Run 1]
+description = "TestSocket (TCP, blocking)"
+*.r1.testUnit = "TestSocket_writer"
+*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_b_tcp']")
+*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_tcp']")
+*.r4.testUnit = "TestSocket_reader"
+*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_b_tcp']")
+*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_tcp']")
+
+[Run 2]
+description = "TestSocket (TCP, nonblocking)"
+*.r1.testUnit = "TestSocket_writer"
+*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_nb_tcp']")
+*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_tcp']")
+*.r4.testUnit = "TestSocket_reader"
+*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_nb_tcp']")
+*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_tcp']")
+
+[Run 3]
+description = "TestSocket (TCP, blocking-nonblocking)"
+*.r1.testUnit = "TestSocket_writer"
+*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_b_tcp']")
+*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_tcp']")
+*.r4.testUnit = "TestSocket_reader"
+*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_nb_tcp']")
+*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_tcp']")
+
+[Run 4]
+description = "TestSocket (TCP, nonblocking-blocking)"
+*.r1.testUnit = "TestSocket_writer"
+*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_nb_tcp']")
+*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_tcp']")
+*.r4.testUnit = "TestSocket_reader"
+*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_b_tcp']")
+*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_tcp']")
+
+[Run 5]
+description = "TestSocket (UDP, blocking)"
+*.r1.testUnit = "TestSocket_writer"
+*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_b_udp']")
+*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_udp']")
+*.r4.testUnit = "TestSocket_reader"
+*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_b_udp']")
+*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_udp']")
+
+[Run 6]
+description = "TestSocket (UDP, nonblocking)"
+*.r1.testUnit = "TestSocket_writer"
+*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_nb_udp']")
+*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_udp']")
+*.r4.testUnit = "TestSocket_reader"
+*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_nb_udp']")
+*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_udp']")
+
+[Run 7]
+description = "TestSocket (UDP, blocking-nonblocking)"
+*.r1.testUnit = "TestSocket_writer"
+*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_b_udp']")
+*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_udp']")
+*.r4.testUnit = "TestSocket_reader"
+*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_nb_udp']")
+*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_udp']")
+
+[Run 8]
+description = "TestSocket (UDP, nonblocking-blocking)"
+*.r1.testUnit = "TestSocket_writer"
+*.r1.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='writer_nb_udp']")
+*.r1.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='writer_udp']")
+*.r4.testUnit = "TestSocket_reader"
+*.r4.unit.config = xmldoc("TestSocket.xml", "/config/units/unit[@name='reader_b_udp']")
+*.r4.unit.output = xmldoc("TestSocket.xml", "/config/outputs/output[@name='reader_udp']")
